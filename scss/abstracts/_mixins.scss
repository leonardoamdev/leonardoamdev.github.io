@mixin prefixing($prop, $value) {
    -webkit-#{$prop}: #{$value};
    -moz-#{$prop}: #{$value};
    -ms-#{$prop}: #{$value};
    -o-#{$prop}: #{$value};
    #{$prop}: #{$value};
}

@mixin prefixing-values($prop, $value) {
    #{$prop}: -webkit-#{$value};
    #{$prop}: -moz-#{$value};
    #{$prop}: -ms-#{$value};
    #{$prop}: -o-#{$value};
    #{$prop}: #{$value};
}

@mixin grid-columns($columns-number) {
    display: grid;
    grid-template-columns: repeat($columns-number, 1fr);
}

@mixin reset-bg {
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
}

@mixin center-x {
    display: block;
    @include prefixing(margin-inline, auto);
}

@mixin absolute-top-left($top, $left) {
    position: absolute;
    top: $top;
    left: $left;
}

@mixin flex-center-row {
    @include prefixing(display, flex);
    @include prefixing(justify-content, center);
    @include prefixing(align-items, center);
}

@mixin flex-center-column {
    @include flex-center-row;
    @include prefixing(flex-direction, column);
}

@mixin flex-evenly-row {
    @include prefixing(display, flex);
    @include prefixing(justify-content, space-evenly);
    @include prefixing(align-items, center);
}

@mixin flex-between-row {
    @include prefixing(display, flex);
    @include prefixing(justify-content, space-between);
    @include prefixing(align-items, center);
}

@mixin breakpoint($point) {
    @if $point == tablet {
        @media only screen and (max-width: 992px) {
            @content;
        }
    }

    @if $point == mobile {
        @media only screen and (max-width: 576px) {
            @content;
        }
    }

    @if $point == large {
        @media only screen and (max-width: 1200px) {
            @content;
        }
    }
}

@mixin fade($type) {
    @if $type== "hide" {
        visibility: hidden;
        opacity: 0;
    } @else if $type== "show" {
        visibility: visible;
        opacity: 1;
    }
}

@mixin transition($prop, $time, $func, $delaying) {
    @if $func == ease {
        @include prefixing(transition, $prop #{$time}s ease #{$delaying}s);
    } @else if $func == ease-in {
        @include prefixing(transition, $prop #{$time}s ease-in #{$delaying}s);
    } @else if $func == ease-in-out {
        @include prefixing(transition, $prop #{$time}s ease-in-out #{$delaying}s);
    } @else if $func == ease-out {
        @include prefixing(transition, $prop #{$time}s ease-out #{$delaying}s);
    } @else if $func == linear {
        @include prefixing(transition, $prop #{$time}s linear #{$delaying}s);
    }
}

@mixin main-props {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    @include flex-center-row;
    background-color: transparent;
    @include transition(all, 0.5, ease-in-out, 0);
}

@mixin main-section-props-left {
    @include main-props;
    @include fade("show");
    left: -100%;
}

@mixin main-section-props-right {
    @include main-props;
    @include fade("show");
    right: -100%;
}

@mixin scale-line-left-right {
    content: "";
    width: 100%;
    height: 0.3rem;
    border-radius: 0.4rem;
    position: absolute;
    bottom: -0.2rem;
    background-color: $steel-teal;
    @include prefixing(transform, scaleX(0));
    @include prefixing(transform-origin, right);
    @include transition(transform, 0.34, ease-in, 0);
}
